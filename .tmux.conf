set -sg escape-time 50 # Don't set to zero
set -g default-terminal "xterm-256color"

# Use vi keybindings
set-window-option -g mode-keys vi

# Vim-like pane resizing
bind-key -n C-M-k resize-pane -U
bind-key -n C-M-j resize-pane -D
bind-key -n C-M-h resize-pane -L
bind-key -n C-M-l resize-pane -R

# # Vim-like pane switching
# bind-key -n M-k select-pane -U
# bind-key -n M-j select-pane -D
# bind-key -n M-h select-pane -L
# bind-key -n M-l select-pane -R

# Remap new splits
bind-key -n M-m split-window -h -c "#{pane_current_path}"
bind-key -n M-n split-window -v -c "#{pane_current_path}"

# Go to window, create it if it doesn't exist yet
bind-key -n M-u if-shell 'tmux select-window -t :0' \
    '' 'new-window -t :0 -c "#{pane_current_path}'      
bind-key -n M-i if-shell 'tmux select-window -t :1' \
    '' 'new-window -t :1 -c "#{pane_current_path}'      
bind-key -n M-o if-shell 'tmux select-window -t :2' \
    '' 'new-window -t :2 -c "#{pane_current_path}'      
bind-key -n M-p if-shell 'tmux select-window -t :3' \
    '' 'new-window -t :3 -c "#{pane_current_path}'      

# Close window/pane
bind-key -n M-c killp

set -g status-bg white
set -g status-fg black

# Custom keybindings
bind-key -T copy-mode-vi | 'send-keys -X start-of-line'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'

bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
